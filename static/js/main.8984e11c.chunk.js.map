{"version":3,"sources":["../src sync /^/.*$","App.js","index.js","images/Cherry.png","images/Nuts.png","images/Orange.png","images/Strawberry.png","logo.svg","Components/ProductDisplay.jsx","Components/Product.jsx","Components/AttributeModal.jsx","Components/Compare.jsx","Components/CompareDisplay.jsx","Redux/Store.js","Redux/rootReducer.js","Redux/productReducer.js","serviceWorker.js","Redux/productActions.js","App.test.js","setupTests.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","App","className","ReactDOM","render","store","document","getElementById","serviceWorker","ProductDisplay","useState","data","products","productRender","product","key","connect","state","addProduct","removeProduct","name","image","price","description","isPresent","setIsPresent","useEffect","src","require","alt","onClick","showModal","openModal","closeModal","applyAttributes","Modal","setAppElement","colors","vendors","condition","attributes","setAttributes","checkAll","setCheckAll","search","setSearch","handleChange","value","target","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","overlay","backgroundColor","contentLabel","type","onChange","placeholder","autoComplete","checked","htmlFor","includes","toLowerCase","vendorstring","substring","length","c","p","middlewares","logger","createStore","rootReducer","applyMiddleware","combineReducers","productReducer","initialState","action","payload","newProducts","filter","f","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","message","attr","test","linkElement","getByText","expect","toBeInTheDocument"],"mappings":"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","file":"static/js/main.8984e11c.chunk.js","sourcesContent":["var map = {\n\t\"./\": 20,\n\t\"./App\": 17,\n\t\"./App.css\": 63,\n\t\"./App.js\": 17,\n\t\"./App.test\": 65,\n\t\"./App.test.js\": 65,\n\t\"./Components/AttributeModal\": 36,\n\t\"./Components/AttributeModal.jsx\": 36,\n\t\"./Components/Compare\": 37,\n\t\"./Components/Compare.jsx\": 37,\n\t\"./Components/CompareDisplay\": 38,\n\t\"./Components/CompareDisplay.jsx\": 38,\n\t\"./Components/Product\": 35,\n\t\"./Components/Product.jsx\": 35,\n\t\"./Components/ProductDisplay\": 33,\n\t\"./Components/ProductDisplay.jsx\": 33,\n\t\"./Components/Styles/_compare-products.scss\": 257,\n\t\"./Components/Styles/_modal.scss\": 258,\n\t\"./Components/Styles/_product-display.scss\": 259,\n\t\"./Components/Styles/_product.scss\": 260,\n\t\"./Components/Styles/_variables.scss\": 261,\n\t\"./Components/Styles/base.scss\": 69,\n\t\"./Redux/Store\": 39,\n\t\"./Redux/Store.js\": 39,\n\t\"./Redux/productActions\": 5,\n\t\"./Redux/productActions.js\": 5,\n\t\"./Redux/productReducer\": 41,\n\t\"./Redux/productReducer.js\": 41,\n\t\"./Redux/rootReducer\": 40,\n\t\"./Redux/rootReducer.js\": 40,\n\t\"./data\": 34,\n\t\"./data.json\": 34,\n\t\"./images/Cherry.png\": 262,\n\t\"./images/Nuts.png\": 263,\n\t\"./images/Orange.png\": 264,\n\t\"./images/Strawberry.png\": 265,\n\t\"./index\": 20,\n\t\"./index.css\": 62,\n\t\"./index.js\": 20,\n\t\"./logo.svg\": 266,\n\t\"./serviceWorker\": 42,\n\t\"./serviceWorker.js\": 42,\n\t\"./setupTests\": 70,\n\t\"./setupTests.js\": 70\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 117;","import React from \"react\";\n\nimport \"./App.css\";\nimport ProductDisplay from \"./Components/ProductDisplay\";\nimport CompareDisplay from \"./Components/CompareDisplay\";\nimport AttributeModal from \"./Components/AttributeModal\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProductDisplay />\n      <CompareDisplay />\n      <AttributeModal />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./Redux/Store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Cherry.8d5e6dc4.png\";","module.exports = __webpack_public_path__ + \"static/media/Nuts.d52b5106.png\";","module.exports = __webpack_public_path__ + \"static/media/Orange.4c9e0bb7.png\";","module.exports = __webpack_public_path__ + \"static/media/Strawberry.4a2da8d9.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from \"react\";\r\n// import data from json\r\nimport data from \"./../data.json\";\r\nimport Product from \"./Product.jsx\";\r\nimport \"./Styles/base.scss\";\r\nexport default function ProductDisplay() {\r\n  // set data for the state with hooks\r\n  const [products, setProducts] = useState(data);\r\n  // render all the products in their seperate component\r\n  const productRender = products.map(product => {\r\n    return <Product product={product} key={product.id} />;\r\n  });\r\n  return (\r\n    <div className=\"container\">\r\n      <p className=\"main-header\">Compare products</p>\r\n      <div className=\"Product-display\">{productRender}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import add and remove actions from redux\r\nimport { addProduct, removeProduct } from \"./../Redux/productActions\";\r\n\r\nfunction Product({ product, products, addProduct, removeProduct }) {\r\n  // destructure attributes\r\n  let { name, image, price, description } = product;\r\n\r\n  //   checking if product already in the comparing items array\r\n  const [isPresent, setIsPresent] = useState(false);\r\n  useEffect(() => {\r\n    // check to display compare or remove in the hover button\r\n    for (let p of products) {\r\n      if (p.id === product.id) {\r\n        setIsPresent(true);\r\n        break;\r\n      }\r\n    }\r\n  }, [products, product]);\r\n  // function to add product to compare\r\n  const handleAdd = () => {\r\n    addProduct(product);\r\n  };\r\n  // function to remove product from compare\r\n  const handleRemove = () => {\r\n    removeProduct(product.id);\r\n    // resetting isPresent piece of state to change button value\r\n    setIsPresent(false);\r\n  };\r\n  return (\r\n    <div className={`Product `}>\r\n      <div className={`Product-img ${isPresent ? \"comparing\" : \"\"}`}>\r\n        <img src={require(`./../${image}`)} alt={name} />\r\n        <button\r\n          className=\"btn btn-compare\"\r\n          onClick={isPresent ? handleRemove : handleAdd}\r\n        >\r\n          {isPresent ? \"REMOVE\" : \"COMPARE\"}\r\n        </button>\r\n      </div>\r\n      <div className=\"Product-details\">\r\n        <div className=\"Product-titles\">\r\n          <p className=\"Product-name\">{name}</p>\r\n          <p className=\"Product-desc\">{description}</p>\r\n        </div>\r\n        <div className=\"Product-price\">{price}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// mapping the redux store state to component props\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.products.products\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { addProduct, removeProduct })(Product);\r\n","import React, { useState } from \"react\";\r\n// npm module to easily implement react modals\r\nimport Modal from \"react-modal\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  closeModal,\r\n  openModal,\r\n  applyAttributes\r\n} from \"./../Redux/productActions\";\r\nfunction AttributeModal({ closeModal, showModal, applyAttributes }) {\r\n  // attaching app element to the modal to prevent overlay issues\r\n  Modal.setAppElement(\"#root\");\r\n  // styles to center the overlay\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\"\r\n    },\r\n    overlay: {\r\n      backgroundColor: \"rgba(0,0,0,0.6)\"\r\n    }\r\n  };\r\n  // initializing hooks for the attributes state\r\n  // Using the attributes state , modal can pass the user selected attributes to the reducer which will filter the comparing properties\r\n  const [attributes, setAttributes] = useState({\r\n    colors: true,\r\n    vendors: true,\r\n    price: true,\r\n    condition: true\r\n  });\r\n\r\n  // keeping track of check all box\r\n  const [checkAll, setCheckAll] = useState(true);\r\n\r\n  const { colors, vendors, price, condition } = attributes;\r\n\r\n  // hook for tracking user input\r\n  const [search, setSearch] = useState(\"\");\r\n  // function to handle checking all boxes\r\n  const handleAllTrue = () => {\r\n    if (checkAll) {\r\n      setCheckAll(false);\r\n    } else {\r\n      setAttributes({\r\n        colors: true,\r\n        vendors: true,\r\n        price: true,\r\n        condition: true\r\n      });\r\n      setCheckAll(true);\r\n    }\r\n  };\r\n\r\n  // apply the user chosen attributes to the compare\r\n  const handleSubmit = () => {\r\n    applyAttributes(attributes);\r\n  };\r\n  // function to handle user input\r\n  const handleSearchChange = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n  // closes the modal\r\n  function setCloseModal() {\r\n    // action to update the modal state\r\n    closeModal();\r\n  }\r\n  // handling the changes in attributes checboxes\r\n  const handleChange = e => {\r\n    let value = !attributes[e.target.name];\r\n    if (value === false) setCheckAll(false);\r\n    setAttributes({ ...attributes, [e.target.name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Modal\r\n          isOpen={showModal}\r\n          onRequestClose={setCloseModal}\r\n          style={customStyles}\r\n          contentLabel=\"Attribute Modal\"\r\n        >\r\n          <div className=\"Modal\">\r\n            <p className=\"Modal-title\">Add/Remove Attributes</p>\r\n            <div className=\"Modal-search\">\r\n              <input\r\n                type=\"text\"\r\n                value={search}\r\n                onChange={handleSearchChange}\r\n                placeholder=\"Search Attributes\"\r\n                name=\"search\"\r\n                autoComplete=\"off\"\r\n              />\r\n              <div className=\"Modal-checkbox-div\">\r\n                <div className=\"Modal-checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"all\"\r\n                    name=\"all\"\r\n                    checked={checkAll}\r\n                    onChange={handleAllTrue}\r\n                  />\r\n                  <label htmlFor=\"all\">Select all</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"Modal-attributes\">\r\n              {/* checking if attribute matches the string entered by the user and then rendering check */}\r\n              {\"price\".includes(search.toLowerCase()) && (\r\n                <div className=\"Modal-checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"Price\"\r\n                    name=\"price\"\r\n                    checked={price}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <label htmlFor=\"Price\"> Price</label>\r\n                </div>\r\n              )}\r\n              {\"colors\".includes(search.toLowerCase()) && (\r\n                <div className=\"Modal-checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"Colors\"\r\n                    name=\"colors\"\r\n                    checked={colors}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <label htmlFor=\"Colors\">Colors</label>\r\n                </div>\r\n              )}\r\n              {\"conditions\".includes(search.toLowerCase()) && (\r\n                <div className=\"Modal-checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"Condition\"\r\n                    name=\"condition\"\r\n                    checked={condition}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <label htmlFor=\"Condition\">Condition</label>\r\n                </div>\r\n              )}\r\n              {\"vendors\".includes(search.toLowerCase()) && (\r\n                <div className=\"Modal-checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={vendors}\r\n                    onChange={handleChange}\r\n                    id=\"Vendor\"\r\n                    name=\"vendors\"\r\n                  />\r\n                  <label htmlFor=\"vendors\"> Vendor</label>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"Modal-btn-div\">\r\n              <button className=\"btn btn-close\" onClick={closeModal}>\r\n                Close\r\n              </button>\r\n              <button className=\"btn btn-done\" onClick={handleSubmit}>\r\n                Apply\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showModal: state.products.showModal\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  openModal,\r\n  closeModal,\r\n  applyAttributes\r\n})(AttributeModal);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Compare({ product, attributes }) {\r\n  // destructuring attributes\r\n  let { price, colors, condition, name, vendors } = product;\r\n  let vendorstring = \"\";\r\n  // building vendor string\r\n  for (let v of vendors) {\r\n    vendorstring += v + \",\";\r\n  }\r\n  // removing last , from the string\r\n  vendorstring = vendorstring.substring(0, vendorstring.length - 1);\r\n\r\n  return (\r\n    <div className=\"Compare\">\r\n      <div className=\"Compare-div\">\r\n        <p className=\"Compare-div-title\">Name</p>\r\n        <p className=\"Compare-div-value\">{name}</p>\r\n      </div>\r\n      {/* check if each attribute has been selected ,if yes, render that piece of the component */}\r\n      {attributes.price && (\r\n        <div className=\"Compare-div\">\r\n          <p className=\"Compare-div-title\">Price</p>\r\n          <p className=\"Compare-div-value\">{price}</p>\r\n        </div>\r\n      )}\r\n      {attributes.condition && (\r\n        <div className=\"Compare-div\">\r\n          <p className=\"Compare-div-title\">Condition</p>\r\n          <div\r\n            className={`Compare-div-value ${\r\n              condition === \"Fresh\" ? \"fresh-bg\" : \"frozen-bg\"\r\n            }`}\r\n          >\r\n            {condition}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attributes.colors && (\r\n        <div className=\"Compare-div\">\r\n          <p className=\"Compare-div-title\">Colors</p>\r\n          <div className=\"Compare-div-colors\">\r\n            {/* rendering small divs with colors described */}\r\n            {colors.map(c => (\r\n              <div\r\n                className=\"Compare-colors\"\r\n                style={{ backgroundColor: c }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {attributes.vendors && (\r\n        <div className=\"Compare-div\">\r\n          <p className=\"Compare-div-title\">Vendors</p>\r\n          <p className=\"Compare-div-value\">{vendorstring}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n// mapping redux store to component state\r\nconst mapStateToProps = state => {\r\n  return {\r\n    attributes: state.products.attributes\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Compare);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { openModal } from \"./../Redux/productActions\";\r\nimport Compare from \"./Compare\";\r\n\r\nfunction CompareDisplay({ products, openModal }) {\r\n  // when compare list is empty\r\n  if (products.length === 0)\r\n    return (\r\n      <div className=\"container\">\r\n        <p className=\"main-header\">No products chosen for comparison.</p>\r\n      </div>\r\n    );\r\n  // when compare list has exactly one product\r\n  if (products.length === 1)\r\n    return (\r\n      <div className=\"container\">\r\n        <p className=\"main-header\">\r\n          Choose one more product to start comparison.\r\n        </p>\r\n      </div>\r\n    );\r\n  // when there are 2 or more products in the compare list\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"Compare-flex\">\r\n        <span className=\"main-header\">Now comparing </span>\r\n        <button className=\"btn btn-edit\" onClick={openModal}>\r\n          Edit Attributes{\" \"}\r\n        </button>\r\n      </div>\r\n      <div className=\"Compare-display\">\r\n        {/* Render each of the products to be compared in their individual components */}\r\n        {products.map(p => (\r\n          <Compare product={p} key={p.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// mapping redux store state to component props\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.products.products\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { openModal })(CompareDisplay);\r\n","// dev dependecy to easily track redux action and states\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nconst initialState = {};\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middlewares)\r\n);\r\n\r\nexport default store;\r\n","import productReducer from \"./productReducer\";\r\nimport { combineReducers } from \"redux\";\r\nexport default combineReducers({ products: productReducer });\r\n","const initialState = {\r\n  products: [],\r\n  showModal: false,\r\n  attributes: { colors: false, vendors: true, condition: true, price: true }\r\n};\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n  const { products } = state;\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case \"ADD_PRODUCT\":\r\n      // adding the new product to the existing comparison items\r\n      return { ...state, products: [payload, ...products] };\r\n    case \"REMOVE_PRODUCT\":\r\n      // removing the product from the comparison list\r\n      let newProducts = products.filter(f => f.id !== payload);\r\n      return { ...state, products: newProducts };\r\n    case \"SET_ATTRIBUTES\":\r\n      // setting attributes, only these will be displayed in the comparison\r\n      return { ...state, attributes: payload };\r\n    case \"OPEN_MODAL\":\r\n      // opens modal\r\n      return { ...state, showModal: true };\r\n    case \"CLOSE_MODAL\":\r\n      // closes modal\r\n      return { ...state, showModal: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// takes in a product to add\r\nexport const addProduct = product => {\r\n  return {\r\n    type: \"ADD_PRODUCT\",\r\n    payload: product\r\n  };\r\n};\r\n\r\n// takes in an id to remove\r\nexport const removeProduct = id => {\r\n  return {\r\n    type: \"REMOVE_PRODUCT\",\r\n    payload: id\r\n  };\r\n};\r\n\r\n// takes an obj to set attributes to filter\r\nexport const applyAttributes = attr => {\r\n  return {\r\n    type: \"SET_ATTRIBUTES\",\r\n    payload: attr\r\n  };\r\n};\r\n// opens modal\r\nexport const openModal = () => {\r\n  return {\r\n    type: \"OPEN_MODAL\"\r\n  };\r\n};\r\n// closes modal\r\nexport const closeModal = () => {\r\n  return {\r\n    type: \"CLOSE_MODAL\"\r\n  };\r\n};\r\n","import React from 'react';\nimport { render } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  const { getByText } = render(<App />);\n  const linkElement = getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n","// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport '@testing-library/jest-dom/extend-expect';\n"],"sourceRoot":""}